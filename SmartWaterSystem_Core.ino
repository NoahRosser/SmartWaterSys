#include "arduino_secrets.h"
/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/9b3f27d1-0ada-4010-879e-183e4ff0eab9 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  int plant_1_Moisture_Threshold;
  int plant_1_Water_Load;
  int units;
  bool module_1_Switch;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include "module.h"
#include "RTC.h"

constexpr uint32_t module_count = 4;

const double std_sys_water_supply_rate = 1.0 * 0.000277777778; // Gallons per hour * conversion factor to gallons per second
const double unit_widget_map[4] = {1, 16, 3.78541178, 3785.41178};
const int32_t moisture_widget_map[3] = { 5, 25, 20 };

double sys_water_supply_rate = std_sys_water_supply_rate;

unsigned long prev_time;
unsigned long curr_time;
double delta_time;

Module modules[module_count] = {
  { 
    .plant = { .water_load = 15.0, .moisture_threshold = 3 }, 
    .valve = { .valve_pin = 2, .is_open = false },
    .moisture_sensor = { .moisture_pin = A0, .moisture_value = 0 },
    .is_watering = false,
    .is_enabled = false,
    .water_supplied = 0.0
  },
  { 
    .plant = { .water_load = 0.0, .moisture_threshold = 0 }, 
    .valve = { .valve_pin = 3, .is_open = false },
    .moisture_sensor = { .moisture_pin = A1, .moisture_value = 0 },
    .is_watering = false,
    .is_enabled = false,
    .water_supplied = 0.0
  },
  { 
    .plant = { .water_load = 0.0, .moisture_threshold = 0 }, 
    .valve = { .valve_pin = 4, .is_open = false },
    .moisture_sensor = { .moisture_pin = A2, .moisture_value = 0 },
    .is_watering = false,
    .is_enabled = false,
    .water_supplied = 0.0
  },
  { 
    .plant = { .water_load = 0.0, .moisture_threshold = 0 }, 
    .valve = { .valve_pin = 5, .is_open = false },
    .moisture_sensor = { .moisture_pin = A3, .moisture_value = 0 },
    .is_watering = false,
    .is_enabled = false,
    .water_supplied = 0.0
  }
};

void setup() {
  Serial.begin(9600);
  
  delay(1500);
  
  initProperties();

  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
  
  for (uint32_t i = 0; i < module_count; i++) {
    modules[i].init();
  }
  
  RTC.begin();
  
  RTCTime start_time(8, Month::APRIL, 2025, 16, 30, 00, DayOfWeek::TUESDAY, SaveLight::SAVING_TIME_ACTIVE);

  RTC.setTime(start_time);
  prev_time = start_time.getUnixTime();
}

void loop() {
  RTCTime now_time;
  RTC.getTime(now_time);
  curr_time = now_time.getUnixTime();
  delta_time = curr_time - prev_time;

  ArduinoCloud.update();
  
  for (uint32_t i = 0; i < module_count; i++) {
    modules[i].update(sys_water_supply_rate, delta_time);
  }

  prev_time = curr_time;

  delay(1000);
}


/*
  Since Plant1MoistureThreshold is READ_WRITE variable, onPlant1MoistureThresholdChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onPlant1MoistureThresholdChange()  {
  modules[0].plant.moisture_threshold = moisture_widget_map[plant_1_Moisture_Threshold];
}

/*
  Since Plant1WaterLoad is READ_WRITE variable, onPlant1WaterLoadChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onPlant1WaterLoadChange()  {
  modules[0].plant.water_load = plant_1_Water_Load;
}

/*
  Since Units is READ_WRITE variable, onUnitsChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onUnitsChange()  {
  sys_water_supply_rate = std_sys_water_supply_rate * unit_widget_map[units];
}

/*
  Since Module1Switch is READ_WRITE variable, onModule1SwitchChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onModule1SwitchChange()  {
  if (module_1_Switch) {
    modules[0].Enable();
  } else {
    modules[0].Disable();
  }
}
